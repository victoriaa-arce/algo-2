IndividuoDecideSiCooperar 
requiere {0 <= Individuo < |cooperan| }
        {{|apuesta| == |pagos| && |pagos| == |eventos| && |cooperan| && |pagos| > 0 } &&
        {for all k : int :: 0 <= k < |pagos| ==>L todosPositivos(pagos[k])} // eventos tiene que ser >= 0 todos 
        {for all k : int :: 0 <= k < |apuestas| ==>L todosPositivos(apuestas[k])}
        {for all i: int :: 0 <= i < |eventos| ==>L (|eventos[i]| == |pagos[i]| && |pagos[i]| == |apuestas[i]|)} }


asegura 
    + si todos cooperan, no cooperas 
    + El objetivo es comparar los recursos que se obtienen al final de las trayectorias cuando se coopera y
     cuando no se coopera, y elegir el comportamiento que mayores recursos genera.




Ejercicio 5 
IndividuoActualizaSuApuesta
requiere {0 <= Individuo < |cooperan| }
        {{|apuesta| == |pagos| && |pagos| == |eventos| && |cooperan| && |pagos| > 0 } &&
        {for all k : int :: 0 <= k < |pagos| ==>L todosPositivos(pagos[k])} // eventos tiene que ser >= 0 todos 
        {for all k : int :: 0 <= k < |apuestas| ==>L todosPositivos(apuestas[k])}
        {for all i: int :: 0 <= i < |eventos| ==>L (|eventos[i]| == |pagos[i]| && |pagos[i]| == |apuestas[i]|)} }

